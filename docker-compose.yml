version: '3.8'
services:

  nginx:
    image: nginx:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    # restart: unless-stopped
    volumes:
      - ./:/var/www/html
      - ./local/docker/conf/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./local/docker/conf/nginx/${COMPOSE_PROFILES}/templates:/etc/nginx/templates
      - volume-mkcert:/root/mkcert
    depends_on:
      - php
      - mkcert
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
      - "${NGINX_PORT_SSL}:${NGINX_PORT_SSL}"
    environment:
      NGINX_HOST: ${NGINX_HOST}
      NGINX_PORT: ${NGINX_PORT}
      NGINX_PORT_SSL: ${NGINX_PORT_SSL}
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
    networks:
      default:
        aliases:
          - ${NGINX_HOST}

  php:
    build:
      context: ./local/docker/images/php-${PHP_VERSION}
      args:
        - COMPOSE_PROFILES=${COMPOSE_PROFILES}
    image: ${COMPOSE_PROJECT_NAME}-php:${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-php
    volumes:
      - ./:/var/www/html
      - ./local/docker/bash_history/php/.bash_history:/home/www-data/.bash_history
      - volume-ca-certificates:/usr/local/share/ca-certificates
    environment:
      TZ: 'Europe/Moscow'
      NGINX_HOST: ${NGINX_HOST}
      XDEBUG_CONFIG: client_host=${XDEBUG_CLIENT_HOST} client_port=${XDEBUG_PORT}
      XDEBUG_TRIGGER: ${XDEBUG_TRIGGER}
    depends_on:
      - memcached
      - mailhog
      - mysql

  mysql:
    image: mysql:${MYSQL_VERSION}
    platform: ${PLATFORM}
    container_name: ${COMPOSE_PROJECT_NAME}-mysql
    # restart: unless-stopped
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - volume-mysql:/var/lib/mysql
      - ./local/docker/conf/mysql:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: 'Europe/Moscow'

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}-phpmyadmin
    # restart: unless-stopped
    depends_on:
      - mysql
    ports:
      - ${PHPMYADMIN_PORT}:80
    environment:
      PMA_HOST: mysql

  memcached:
    image: memcached:alpine
    container_name: ${COMPOSE_PROJECT_NAME}-memcached
    ports:
      - "${MEMCACHED_PORT}:11211"

  mailhog:
    image: mailhog/mailhog
    platform: ${PLATFORM}
    container_name: ${COMPOSE_PROJECT_NAME}-mailhog
    ports:
      - "${MAILHOG_PORT_SMTP}:1025"
      - "${MAILHOG_PORT_HTTP}:8025"

  mkcert:
    build: ./local/docker/images/mkcert
    container_name: ${COMPOSE_PROJECT_NAME}-mkcert
    environment:
      NGINX_HOST: ${NGINX_HOST}
      TZ: 'Europe/Moscow'
    volumes:
      - volume-mkcert:/root/mkcert
      - volume-ca-certificates:/usr/local/share/ca-certificates

  push-server-sub:
    build: ./local/docker/images/push-server
    profiles: [ "portal" ]
    container_name: ${COMPOSE_PROJECT_NAME}-push-server-sub
    depends_on:
      - redis
    ports:
      - "8010"
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - LISTEN_HOSTNAME=0.0.0.0
      - LISTEN_PORT=8010
      - SECURITY_KEY=${PUSH_SERVER_SECRET_KEY}
      - MODE=sub

  push-server-pub:
    build: ./local/docker/images/push-server
    profiles: [ "portal" ]
    container_name: ${COMPOSE_PROJECT_NAME}-push-server-pub
    depends_on:
      - redis
    ports:
      - "9010"
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - LISTEN_HOSTNAME=0.0.0.0
      - LISTEN_PORT=9010
      - SECURITY_KEY=${PUSH_SERVER_SECRET_KEY}
      - MODE=pub

  redis:
    image: redis:alpine
    profiles: [ "portal", "site" ]
    container_name: ${COMPOSE_PROJECT_NAME}-redis

  cron:
    build:
      context: ./local/docker/images/cron
      args:
        - COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME}
        - PHP_VERSION=${PHP_VERSION}
    image: ${COMPOSE_PROJECT_NAME}-cron:php${PHP_VERSION}
    container_name: ${COMPOSE_PROJECT_NAME}-cron
    volumes:
      - ./:/var/www/html
    environment:
      TZ: 'Europe/Moscow'
    depends_on:
      - php

  phpredisadmin:
    image: erikdubbelboer/phpredisadmin:1.19.2
    container_name: ${COMPOSE_PROJECT_NAME}-phpredisadmin
    ports:
      - "${REDISMYADMIN_PORT}:80"
    environment:
      - REDIS_1_HOST=${REDIS_HOST}
      - REDIS_1_PORT=${REDIS_PORT}
      - ADMIN_USER=${REDISMYADMIN_USER}
      - ADMIN_PASS=${REDISMYADMIN_PASSWORD}
    depends_on:
      - redis

volumes:
  volume-mysql:
  volume-mkcert:
  volume-ca-certificates:
  volume-www:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: ${APP_CODE_PATH_HOST}
